<?xml version="1.0" encoding="UTF-8" ?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	
	 
	<http auto-config="true">
		<headers />
		<intercept-url pattern="/AdminInside"
			access="ROLE_Network" />
		<intercept-url pattern="/profile"
			access="ROLE_Network" />

		<form-login login-page="/AdminLogin" default-target-url="/AdminInside"
			authentication-failure-url="/AdminLogin?error" username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/AdminLogin?logout" />
	</http>

	<!-- Define the application authentication manager to use a custom Class (mongoUserDetailsService)
	     to validate the user access, and the password enconding -->
    <authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="jupiterSecurityService">
			<password-encoder hash="plaintext" />
			 <!--For BCryptPasswordEncoder Validation   -->
			<!-- <password-encoder ref="encoder"/> -->
		</authentication-provider>
	</authentication-manager>
         
         <!--For BCryptPasswordEncoder Validation   -->
	 <!-- <beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10"/>
	</beans:bean> -->
	
</beans:beans>